[{"title": "HTML", "type": ["definition"], "description": "HTML ", "keywords": [], "past": [], "future": [2, 3, 6, 7, 12, 26], "id": 1, "related": []}, {"title": "annotates content ", "type": ["definition"], "description": "annotates content ", "keywords": [], "past": [1], "future": [], "id": 2, "related": []}, {"title": "defines document structure ", "type": ["definition"], "description": "defines document structure ", "keywords": [], "past": [1], "future": [26, 27], "id": 3, "related": []}, {"title": "CSS ", "type": ["definition"], "description": "CSS ", "keywords": [], "past": [], "future": [], "id": 4, "related": []}, {"title": "Javascript ", "type": ["definition"], "description": "Javascript ", "keywords": [], "past": [], "future": [11, 13, 15, 20, 36], "id": 5, "related": []}, {"title": "caniuse.com", "type": ["definition"], "description": "caniuse.com will check for you supported features for browsers ", "keywords": [], "past": [1], "future": [], "id": 6, "related": []}, {"title": "HTML tag ", "type": ["definition"], "description": "HTML tag ", "keywords": [], "past": [1], "future": [8, 9, 12, 26, 27, 32], "id": 7, "related": []}, {"title": "opening tag ", "type": ["definition"], "description": "opening tag ", "keywords": [], "past": [7], "future": [10], "id": 8, "related": []}, {"title": "closing tag ", "type": ["definition"], "description": "closing tag ", "keywords": [], "past": [7], "future": [], "id": 9, "related": []}, {"title": "attribute  ", "type": ["definition"], "description": "attribute  ", "keywords": [], "past": [8], "future": [], "id": 10, "related": []}, {"title": "javascript can be run in html with the <script> tag ", "type": ["definition"], "description": "javascript can be run in html with the <script> tag ", "keywords": [], "past": [12, 5], "future": [], "id": 11, "related": []}, {"title": "<script> ", "type": ["definition"], "description": "<script> ", "keywords": [], "past": [1, 7], "future": [11, 28], "id": 12, "related": []}, {"title": "var variables", "type": ["definition"], "description": "variables are starting with  var ", "keywords": [], "past": [5], "future": [14, 17, 18, 24], "id": 13, "related": []}, {"title": "no types are declared for variables ", "type": ["definition"], "description": "no types are declared for variables ", "keywords": [], "past": [13], "future": [], "id": 14, "related": []}, {"title": "function", "type": ["definition"], "description": "function a () {...} or var a = function () {...} definition ", "keywords": [], "past": [5], "future": [16, 17, 18], "id": 15, "related": []}, {"title": "executing a function will have a() or no space after function name ", "type": ["definition"], "description": "executing a function will have a() or no space after function name ", "keywords": [], "past": [15], "future": [], "id": 16, "related": []}, {"title": "can have attributes in function ", "type": ["definition"], "description": "can have attributes in function ", "keywords": [], "past": [15, 13], "future": [19], "id": 17, "related": []}, {"title": "function will return a value with return keyword ", "type": ["definition"], "description": "function will return a value with return keyword ", "keywords": [], "past": [15, 13], "future": [], "id": 18, "related": []}, {"title": "all arguments in a javascript function are optional ", "type": ["definition"], "description": "all arguments in a javascript function are optional ", "keywords": [], "past": [17], "future": [], "id": 19, "related": []}, {"title": "scope ", "type": ["definition"], "description": "scope ", "keywords": [], "past": [5], "future": [21, 22], "id": 20, "related": []}, {"title": "global scope ", "type": ["definition"], "description": "global scope ", "keywords": [], "past": [20], "future": [24], "id": 21, "related": []}, {"title": "lexical scope ", "type": ["definition"], "description": "lexical scope or the curly braces indicate a new scope", "keywords": [], "past": [20], "future": [23], "id": 22, "related": []}, {"title": "execution context", "type": ["definition"], "description": "each execution context has its own variable environment and has a special this object and has a reference to outer environment ", "keywords": [], "past": [22], "future": [24, 25], "id": 23, "related": []}, {"title": "scope chain", "type": [], "description": "scope chain means referenced variable will be searched in its current scope first, then outer, then outer, etc. If not found in global scope, the variable is undefined ", "keywords": [], "past": [23, 21, 13], "future": [], "id": 24, "related": []}, {"title": "this object", "type": ["definition"], "description": "this is refering to window  ", "keywords": [], "past": [23], "future": [], "id": 25, "related": []}, {"title": "<!doctype html>", "type": ["definition"], "description": "every html should have <!doctype html> ", "keywords": [], "past": [3, 1, 7], "future": [], "id": 26, "related": []}, {"title": "<html>", "type": ["definition", "html tag"], "description": "<html> contains the whole html document ", "keywords": [], "past": [7, 3], "future": [29], "id": 27, "related": []}, {"title": "<head>", "type": ["defintion", "html tag"], "description": "<head> tag contains metadata about main content ", "keywords": [], "past": [12], "future": [31], "id": 28, "related": []}, {"title": "<body>", "type": ["definition", "html tag"], "description": "<body> ", "keywords": [], "past": [27], "future": [30], "id": 29, "related": []}, {"title": "<p> paragraph tag ", "type": ["definition", "html tag"], "description": "<p> paragraph tag ", "keywords": [], "past": [29], "future": [], "id": 30, "related": []}, {"title": "<meta>", "type": ["definition", "html tag"], "description": "<meta> metadata tag ", "keywords": [], "past": [28], "future": [], "id": 31, "related": []}, {"title": "block-level elements", "type": ["definition", "HTML"], "description": "block-level elements render to begin on a new line ", "keywords": [], "past": [7], "future": [33, 34], "id": 32, "related": []}, {"title": "inline elements", "type": ["definition"], "description": "inline elements all go in same line, can only contain other inline elements ", "keywords": [], "past": [32], "future": [35], "id": 33, "related": []}, {"title": "<div>", "type": ["definition", "HTML tag"], "description": "<div> is most standard block level element ", "keywords": [], "past": [32], "future": [], "id": 34, "related": []}, {"title": "<span>", "type": ["definition", "HTML tag"], "description": "<span> is the most standard inline element ", "keywords": [], "past": [33], "future": [], "id": 35, "related": []}, {"title": "Node.js", "type": ["definition"], "description": "Node.js is built around an event driven non blocking I/O model which makes it very efficient to run Javascript programs on the desktop and synchronous Javascript on the desktop.  ", "keywords": [], "past": [5], "future": [37, 38], "id": 36, "related": []}, {"title": "npm", "type": ["definition"], "description": "npm or Node package manager is the manager for the node ecosystem that manages all the node modules and packages that have been made public available by many different users ", "keywords": [], "past": [36], "future": [], "id": 37, "related": []}, {"title": "package.json", "type": ["definition"], "description": "A typical node package consist of JavaScript files together with a file called package.json which is the manifest file for this node module. ", "keywords": [], "past": [36], "future": [39], "id": 38, "related": []}, {"title": "npm init", "type": ["definition"], "description": "npm init creates a package.json file through UI ", "keywords": [], "past": [38], "future": [], "id": 39, "related": []}]