[{"title": "command line interfaces CLIs ", "type": ["definition"], "description": "command line interfaces CLIs ", "keywords": [], "past": [], "future": [2], "id": 1, "related": []}, {"title": "one-off script for single .py script ", "type": ["definition"], "description": "one-off script for single .py script ", "keywords": [], "past": [1, 4], "future": [], "id": 2, "related": []}, {"title": ".gitignore is a file that tells git which kinds of files to ignore ", "type": ["definition"], "description": ".gitignore is a file that tells git which kinds of files to ignore ", "keywords": [], "past": [4], "future": [], "id": 3, "related": []}, {"title": "package ", "type": ["definition"], "description": "package ", "keywords": [], "past": [], "future": [3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "id": 4, "related": []}, {"title": "script ", "type": ["definition"], "description": "script ", "keywords": [], "past": [4], "future": [], "id": 5, "related": []}, {"title": "LICENSE", "type": ["definition"], "description": "LICENSE for distributing code ", "keywords": [], "past": [4], "future": [], "id": 6, "related": []}, {"title": "README", "type": ["definition"], "description": "README is a markdown file documenting the purpose and usage of your application ", "keywords": [], "past": [4], "future": [], "id": 7, "related": []}, {"title": "requirements.txt", "type": ["definition"], "description": "requirements.txt defines outside python dependencies and their versions for your application ", "keywords": [], "past": [4], "future": [], "id": 8, "related": []}, {"title": "setup.py", "type": ["definition"], "description": "setup.py can also be used to define dependencies but it really shines for other work that needs to be done during installation ", "keywords": [], "past": [4], "future": [], "id": 9, "related": []}, {"title": "tests.py", "type": ["definition"], "description": "tests.py houses tests ", "keywords": [], "past": [4], "future": [], "id": 10, "related": []}, {"title": "__init__.py", "type": ["definition"], "description": "__init__.py has many functions but for our purposes it tells the Python interpreter that this directory is a package directory. it can import module structures not in helpers or readmes ", "keywords": [], "past": [4], "future": [], "id": 11, "related": []}, {"title": "bin", "type": ["definition"], "description": "bin/ holds any executable files ", "keywords": [], "past": [4], "future": [], "id": 12, "related": []}, {"title": "docs", "type": [], "description": "/docs for documentation ", "keywords": [], "past": [4], "future": [], "id": 13, "related": []}, {"title": "data", "type": ["definition"], "description": "data ", "keywords": [], "past": [4], "future": [], "id": 14, "related": []}, {"title": "git commit", "type": ["definition", "git"], "description": "commit records a snapshot of all the files in your directory ", "keywords": [], "past": [], "future": [16, 21, 23, 28], "id": 15, "related": []}, {"title": "git branch <branch>", "type": ["definition"], "description": "branches are incredibly lightweight pointers to specific commits ", "keywords": [], "past": [15], "future": [17, 19, 20, 25, 26, 27, 29], "id": 16, "related": []}, {"title": "git checkout <branch>", "type": ["definition"], "description": "git checkout <branch> will checkout the branch needed ", "keywords": [], "past": [16], "future": [18, 23, 24], "id": 17, "related": []}, {"title": "git checkout -b <branch>", "type": ["definition", "git"], "description": "git checkout -b <new branch> will checkout and create new branch ", "keywords": [], "past": [17], "future": [], "id": 18, "related": []}, {"title": "git merge <other branch>", "type": ["definition", "git"], "description": "git merge creates a special commit that has two unique parents and the set of all their parents . also have to merge the other branch ", "keywords": [], "past": [16], "future": [], "id": 19, "related": []}, {"title": "git rebase <another branch>", "type": ["definition", "git"], "description": "git rebase takes a set of commits, copies them, and plops them down somewhere else. it leaves the original commit it was on and points to a new commit as if it were the original commit. It looks like the two features were developed sequentially from the original commit, but they were developed in parallel. It contains the work of the original commit ", "keywords": [], "past": [16], "future": [29], "id": 20, "related": []}, {"title": "HEAD", "type": ["definition", "git"], "description": "HEAD is the symbolic name for the currently checked out commit. HEAD always pooints to the most recent commit which is reflected in the working tree. Most git commands which make changes to the working tree will start by changing HEAD. Usually it points to a branch but we can detach head ", "keywords": [], "past": [15], "future": [22, 23, 28, 29], "id": 21, "related": []}, {"title": "can detach HEAD by checkout another commit ", "type": ["definition", "git"], "description": "can detach HEAD by checkout another commit ", "keywords": [], "past": [21], "future": [23], "id": 22, "related": []}, {"title": "git checkout <branch>^", "type": ["definition", "git"], "description": "^ will be equivalent to the first parent of master ", "keywords": [], "past": [17, 15, 21, 22], "future": [25, 26, 29], "id": 23, "related": []}, {"title": "git checkout <branch>~(int)", "type": ["definition", "git"], "description": "the tilde operator takes a ~4 to specify the number of parents  you would lkike  to ascend ", "keywords": [], "past": [17], "future": [25, 26, 29], "id": 24, "related": []}, {"title": "branch forcing git branch -f <branch> <commit>", "type": ["definition", "git"], "description": "branch forcing is a way to move branches around ", "keywords": [], "past": [16, 24, 23], "future": [], "id": 25, "related": []}, {"title": "git reset <branch>~^", "type": ["definition", "git"], "description": "git reset reverts changes by moving a branch reference backwards in time to an older commit as if the commit had never been made in the first place ", "keywords": [], "past": [16, 24, 23], "future": [], "id": 26, "related": []}, {"title": "git revert <branch>", "type": ["definition", "git"], "description": "git revert does well to share reversed changes with others ", "keywords": [], "past": [16], "future": [], "id": 27, "related": []}, {"title": "git cherry-pick <commit1> <commit2> <...> ", "type": ["definition", "git"], "description": "git cherry-pick copies a series of commits below your current location HEAD ", "keywords": [], "past": [15, 21], "future": [], "id": 28, "related": []}, {"title": "git rebase -i HEAD~^", "type": ["definition", "git"], "description": "git rebase -i  will open interactive UI to reorder, omit, or squash/combine commits ", "keywords": [], "past": [20, 21, 16, 24, 23], "future": [], "id": 29, "related": []}]